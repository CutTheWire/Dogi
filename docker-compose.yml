services:
  python-libs-init:
    build:
      context: ./fastapi
      dockerfile: src/Dockerfile.libs
    container_name: python-libs-init
    volumes:
      - python-libs:/opt/python-libs
    command: >
      sh -c "
      if [ ! -f /opt/python-libs/.initialized ]; then
        echo 'Installing Python libraries...'
        pip install --target=/opt/python-libs/lib/python3.11/site-packages 'numpy>=1.22.4,<2.0.0'
        pip install --target=/opt/python-libs/lib/python3.11/site-packages torch==2.3.1+cu121 torchvision==0.18.1+cu121 torchaudio==2.3.1+cu121 -f https://download.pytorch.org/whl/torch_stable.html
        pip install --target=/opt/python-libs/lib/python3.11/site-packages -r requirements.txt
        CMAKE_ARGS='-DGGML_CUDA=ON' pip install --target=/opt/python-libs/lib/python3.11/site-packages llama-cpp-python --no-cache-dir --force-reinstall
        pip install --target=/opt/python-libs/lib/python3.11/site-packages https://github.com/oobabooga/llama-cpp-python-cuBLAS-wheels/releases/download/textgen-webui/llama_cpp_python_cuda-0.2.62+cu121-cp311-cp311-manylinux_2_31_x86_64.whl
        pip install --target=/opt/python-libs/lib/python3.11/site-packages exllamav2 pynvml uvicorn
        touch /opt/python-libs/.initialized
        echo 'Libraries installation completed!'
      else
        echo 'Libraries already installed, skipping...'
      fi
      "

  mysql:
    build:
      context: ./mysql
    container_name: mysql
    ports:
      - "13306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/log.cnf:/etc/mysql/conf.d/log.cnf
    command: [
      "--character-set-server=utf8mb4", 
      "--collation-server=utf8mb4_unicode_ci",
      "--skip-host-cache",
      "--skip-name-resolve"
      ]

  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    ports:
      - "8000:8000"
    volumes:
      - chroma-data:/data
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/data
      - ANONYMIZED_TELEMETRY=FALSE
    restart: unless-stopped

  mongodb:
    restart: unless-stopped
    build:
      context: ./mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWORD}
      MONGO_DATABASE: ${MONGO_DATABASE}
      TZ: Asia/Seoul  # 한국 시간대 설정
    volumes:
      - ./mongo/data:/data/db
      - ./logs:/var/logs/mongodb
      - ./mongo/.env:/docker-entrypoint-initdb.d/.env

  fastapi:
    build:
      context: ./fastapi
      dockerfile: src/server/Dockerfile
    container_name: fastapi
    ports:
      - "80:80"
    volumes:
      - python-libs:/opt/python-libs:ro
      - ./fastapi/models/:/app/fastapi/models/:rw
      - ./fastapi/logs:/app/logs:rw
      - ./fastapi/src/.env:/app/.env:ro
    depends_on:
      - python-libs-init
      - chromadb
      - mongodb
      - mysql
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 4G
          devices:
            - driver: nvidia
              capabilities: [gpu]
    environment:
      - TZ=Asia/Seoul
      - NVIDIA_VISIBLE_DEVICES=0
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/opt/python-libs/lib/python3.11/site-packages:/app:/app/src
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - UVICORN_HTTP=h11
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - CHROMA_COLLECTION_NAME=vet_medical_data
      - MONGO_ADMIN_USER=${MONGO_ADMIN_USER}
      - MONGO_ADMIN_PASSWORD=${MONGO_ADMIN_PASSWORD}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_DAYS=${REFRESH_TOKEN_EXPIRE_DAYS}

volumes:
  python-libs:
    driver: local
  chroma-data:
    driver: local
  mysql-data:
    driver: local